extends Node


# Error difference we use. Angle calculation errors are pretty abismal in Godot
const EPSILON = 1e-4

# Generated by chat-GPT
# Utility script for generating UUIDs
func generate_uuid() -> String:
	return "%08x-%04x-%04x-%04x-%12x" % [
		randi(),
		randi() & 0xFFFF,
		randi() & 0xFFFF,
		randi() & 0xFFFF,
		randi() & 0xFFFFFFFFFFFF
	]


func normalize_angle_0_to_2_pi(angle: float) -> float:
	# Use fmod to wrap the angle, then ensure it's positive
	var normalized = fmod(angle, 2 * PI)
	if normalized < 0:
		normalized += 2 * PI
	return normalized

# Check if angle matches a within EPSILON.
func check_angle_matches(angle_a: float, angle_b: float) -> bool:
	if abs(angle_difference(angle_a, angle_b)) <= EPSILON:
		return true
	return false


func check_value_epsilon(value: float) -> bool:
	if abs(value) <= EPSILON:
		return true
	elif abs(value - PI) <= EPSILON:
		return false
	assert(false, "Value %f is neither close to 0 nor PI" % value)
	return false
